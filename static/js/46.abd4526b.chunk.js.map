{"version":3,"file":"static/js/46.abd4526b.chunk.js","mappings":"kPACA,EAA8B,iC,UCDjBA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,IAAnB,EACtBC,EAAgB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,OAAnB,EACrBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,E,SCInBC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXP,GAAOQ,EAAAA,EAAAA,IAAYX,GAEnBY,EAAY,mCAAG,WAAMC,GAAN,2EACnBA,EAAEC,iBACIC,EAAYF,EAAEG,cACdC,EAAOF,EAAUG,SAASD,KAAKE,MAC/BC,EAASL,EAAUG,SAASE,OAAOD,MAErChB,EAAKkB,MAAK,SAAAC,GAAI,OAAIA,EAAKL,OAASA,CAAlB,IAChBM,MAAMN,EAAO,2BAEbR,GAASe,EAAAA,EAAAA,IAAW,CAAEP,KAAAA,EAAMG,OAAAA,KAG9BL,EAAUU,QAZS,2CAAH,sDAelB,OACE,kBAAMC,UAAWC,EAAiBC,SAAUhB,EAA5C,WACE,kBACEiB,KAAK,OACLZ,KAAK,OACLa,YAAY,OACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,kBACEJ,KAAK,MACLZ,KAAK,SACLa,YAAY,eACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,mBAAQJ,KAAK,SAAb,2BAGL,E,UC7CD,EAA4B,0BCIfK,EAAS,WACpB,IAAMzB,GAAWC,EAAAA,EAAAA,MAOjB,OACE,0BACE,kBACEgB,UAAWC,EACXQ,SATqB,SAAAtB,GACzB,IAAMM,EAAQN,EAAEuB,OAAOjB,MACvBV,GAAS4B,EAAAA,EAAAA,GAAelB,GACzB,EAOKU,KAAK,OACLZ,KAAK,SACLa,YAAY,wBACZC,QAAQ,4HAIf,ECxBD,EAA4B,mCAA5B,EAA0E,kCCI7DO,EAAkB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B9B,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iBAAKgB,UAAWC,EAAhB,WACE,yBACGY,EAAQtB,KADX,KACmBsB,EAAQnB,WAE3B,mBAAQM,UAAWC,EAAca,QAThB,WACnB/B,GAASgC,EAAAA,EAAAA,IAAcF,EAAQG,IAChC,EAOG,sBAKL,ECtBYC,EAAe,SAAA1C,GAAK,OAAIA,EAAM2C,MAAV,ECQpBC,EAAc,WACzB,IAAMpC,GAAWC,EAAAA,EAAAA,MACXP,GAAOQ,EAAAA,EAAAA,IAAYX,GACnB4C,GAASjC,EAAAA,EAAAA,IAAYgC,GACrBtC,GAAUM,EAAAA,EAAAA,IAAYP,GACtBG,GAAQI,EAAAA,EAAAA,IAAYL,IAE1BwC,EAAAA,EAAAA,YAAU,WACRrC,GAASsC,EAAAA,EAAAA,MACV,GAAE,CAACtC,IAEJ,IAAMuC,EAAmB7C,EAAKyC,QAAO,SAAAtB,GAAI,OACvCA,EAAKL,KAAKgC,cAAcC,SAASN,EAAOK,cADD,IAIzC,OACE,gCACC1C,IAAS,uBAAIA,IACXJ,EAAKgD,OAAS,IAAK,SAACjB,EAAD,IACnB/B,EAAKgD,OAAS,IAAK,qCACnB9C,IAAW,gDACZ,wBACG2C,EAAiBI,KAAI,SAAAb,GAAO,OAC3B,yBACE,SAACD,EAAD,CAAiBC,QAASA,KADnBA,EAAQG,GADU,QAQpC,EC9Bc,SAASW,IACtB,IAAM5C,GAAWC,EAAAA,EAAAA,MACXL,GAAUM,EAAAA,EAAAA,IAAYP,GAM5B,OAJA0C,EAAAA,EAAAA,YAAU,WACRrC,GAASsC,EAAAA,EAAAA,MACV,GAAE,CAACtC,KAGF,iCACE,SAAC6C,EAAA,EAAD,WACA,4CAEA,SAAC9C,EAAD,KACA,yBAAMH,GAAW,yBACjB,SAACwC,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","redux/filter/selectors.js","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\"};","export const selectContacts = state => state.contacts.list;\nexport const selectLoading = state => state.contacts.loading;\nexport const selectError = state => state.contacts.error;\n","import React from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const list = useSelector(selectContacts);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formValue = e.currentTarget;\n    const name = formValue.elements.name.value;\n    const number = formValue.elements.number.value;\n\n    if (list.some(elem => elem.name === name)) {\n      alert(name + ' is already in contacts');\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n\n    formValue.reset();\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <input\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Phone number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"findInput\":\"Filter_findInput__lSqjT\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilterQuery } from '../../redux/filter/slice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    const value = e.target.value;\n    dispatch(setFilterQuery(value));\n  };\n\n  return (\n    <div>\n      <input\n        className={css.findInput}\n        onChange={handleFilterChange}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find contacts by name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"elemStyle\":\"ContactListItem_elemStyle__wUhrw\",\"btnStyle\":\"ContactListItem_btnStyle__OiXCL\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport css from './ContactListItem.module.css';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  }\n\n  return (\n    <div className={css.elemStyle}>\n      <p>\n        {contact.name}: {contact.number}\n      </p>\n      <button className={css.btnStyle} onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","export const selectFilter = state => state.filter;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { selectContacts, selectLoading, selectError } from '../../redux/contacts/selectors';\nimport {selectFilter} from '../../redux/filter/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const list = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = list.filter(elem =>\n    elem.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n    {error && <p>{error}</p>}\n      {list.length > 0 && <Filter />}\n      {list.length > 0 && <h2>Contacts</h2>}\n      {loading && <p>Loading contacts...</p>}\n      <ul>\n        {filteredContacts.map(contact => (\n          <li key={contact.id}>\n            <ContactListItem contact={contact} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectLoading } from '../redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n      <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <div>{loading && 'Loading contacts...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","list","selectLoading","loading","selectError","error","ContactForm","dispatch","useDispatch","useSelector","handleSubmit","e","preventDefault","formValue","currentTarget","name","elements","value","number","some","elem","alert","addContact","reset","className","css","onSubmit","type","placeholder","pattern","title","required","Filter","onChange","target","setFilterQuery","ContactListItem","contact","onClick","deleteContact","id","selectFilter","filter","ContactList","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","length","map","Contacts","Helmet"],"sourceRoot":""}